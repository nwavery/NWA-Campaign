# .github/workflows/deploy.yml

name: Deploy to Cloud Run

on:
  push:
    branches: [ main ] # Trigger deployment only on pushes to the main branch

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: us-central1
  CLOUD_RUN_SERVICE_NAME: nwa-campaign-website
  ARTIFACT_REGISTRY_REPOSITORY: nwa-campaign-images
  # Production URL needed for build and runtime
  PRODUCTION_URL: ${{ secrets.PRODUCTION_URL }}
  # Stripe public key needed for build and runtime
  NEXT_PUBLIC_STRIPE_PUBLIC_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLIC_KEY }}

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    # Add permissions necessary for Workload Identity Federation
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Google Auth
      id: auth
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: Authorize Docker push
      run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev --quiet

    - name: Enable Google Cloud Services
      run: |-
        gcloud services enable \
          artifactregistry.googleapis.com \
          run.googleapis.com \
          secretmanager.googleapis.com

    - name: Build and Push Docker image
      env:
        IMAGE_NAME: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPOSITORY }}/${{ env.CLOUD_RUN_SERVICE_NAME }}
      run: |
        # Build with both latest and commit SHA tags
        docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:${{ github.sha }} .
        # Push both tags
        docker push $IMAGE_NAME --all-tags

    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.CLOUD_RUN_SERVICE_NAME }}
        image: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPOSITORY }}/${{ env.CLOUD_RUN_SERVICE_NAME }}:${{ github.sha }}
        region: ${{ env.GCP_REGION }}
        flags: |
          --allow-unauthenticated
          --platform=managed
          --update-env-vars="NODE_ENV=production,PORT=8080,PRODUCTION_URL=${{ env.PRODUCTION_URL }},NEXT_PUBLIC_BASE_URL=${{ env.PRODUCTION_URL }},NEXT_PUBLIC_STRIPE_PUBLIC_KEY=${{ env.NEXT_PUBLIC_STRIPE_PUBLIC_KEY }}"
          --update-secrets="STRIPE_SECRET_KEY=projects/${{ env.GCP_PROJECT_ID }}/secrets/STRIPE_SECRET_KEY:latest,GOOGLE_SHEET_ID=projects/${{ env.GCP_PROJECT_ID }}/secrets/GOOGLE_SHEET_ID:latest,GOOGLE_SHEET_RANGE=projects/${{ env.GCP_PROJECT_ID }}/secrets/GOOGLE_SHEET_RANGE:latest"

    - name: Output Cloud Run URL
      run: |
        echo "Cloud Run URL: $(gcloud run services describe ${{ env.CLOUD_RUN_SERVICE_NAME }} --platform managed --region ${{ env.GCP_REGION }} --format 'value(status.url)')" 